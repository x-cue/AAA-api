# Custom Nginx Configuration for Elastic Beanstalk

user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    200000;

events {
    worker_connections  1024;
}

http {
    server_tokens off;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    include       conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default     "upgrade";
    }

    # Redirect all HTTP requests to HTTPS
    server {
        listen 80;
        server_name aaa-api.us-east-2.elasticbeanstalk.com;
        
        access_log    /var/log/nginx/access.log main;

        return 301 https://$host$request_uri;  # Redirect to HTTPS
    }

    # Handle HTTPS traffic
    server {
        listen 443 ssl;
        server_name aaa-api.us-east-2.elasticbeanstalk.com;

        ssl_certificate /etc/letsencrypt/live/aaa-api.us-east-2.elasticbeanstalk.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/aaa-api.us-east-2.elasticbeanstalk.com/privkey.pem;

        access_log /var/log/nginx/access.log main;

        client_header_timeout 60;
        client_body_timeout 60;
        keepalive_timeout 60;

        gzip on;  # Enable gzip compression
        gzip_comp_level 4;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss;

        location /api {
            proxy_pass http://localhost:8080/api;  # Forward to the Node.js app
            proxy_set_header Host $host;            # Preserve the host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Add forwarded for header
            proxy_set_header X-Forwarded-Proto $scheme;  # Add forwarded proto header
        }
    }
}
